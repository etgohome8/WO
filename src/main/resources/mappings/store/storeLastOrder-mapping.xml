<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace=dao이름 -->
<mapper namespace="SOrderserviceDAO">
	<select id="orderList" resultType="OrdersVO">
		SELECT *, to_char(o.o_order_date,'yyyy-MM-dd') as o__date FROM ORDERS o
		INNER JOIN
		USERS u
		ON (o.U_ID = u.U_ID)
		WHERE SI_CODE = #{si_code} 
		AND O_PAY_STATUS = TRUE AND O_ORDER_STATE = '전달완료'
		ORDER BY O_SEQ DESC
	</select>
	<select id="orderDetailList" resultType="BasketVO">
		SELECT b.b_seq,
		b.o_code,
		b.u_id,
		b.si_code,
		b.m_seq,
		b.b_quantity,
		b.b_single_price,
		b.b_total_price,
		b.opb_code,
		b.op_code1,
		b.op_code2,
		b.op_code3,
		b.op_code4,
		b.op_code5,
		m.m_name,
		m.m_img_file,
		ob.opb_price,
		ob.opb_name,
		op.op_name as op_name1,
		op.op_price as op_price1,
		opp.op_name as op_name2,
		opp.op_price as op_price2,
		oppp.op_name as op_name3,
		oppp.op_price as op_price3,
		opppp.op_name as op_name4,
		opppp.op_price as op_price4,
		oppppp.op_name as op_name5,
		oppppp.op_price as op_price5
		FROM BASKET_ORDER b
		INNER JOIN
		MENU m
		ON (b.M_SEQ = m.M_SEQ)
		INNER JOIN
		option_basic ob 
		ON (ob.opb_code = b.opb_code and ob.SI_CODE = b.SI_CODE)
		JOIN
		options op 
		ON (op.op_code = b.op_code1 and op.SI_CODE = b.SI_CODE)
		JOIN
		options opp 
		ON (opp.op_code = b.op_code2 and opp.SI_CODE = b.SI_CODE)
		JOIN
		options oppp 
		ON (oppp.op_code = b.op_code3 and oppp.SI_CODE = b.SI_CODE)
		JOIN
		options opppp 
		ON (opppp.op_code = b.op_code4 and opppp.SI_CODE = b.SI_CODE)
		JOIN
		options oppppp
		ON (oppppp.op_code = b.op_code5 and oppppp.SI_CODE = b.SI_CODE)
		WHERE b.SI_CODE = #{si_code}
		ORDER BY B_SEQ ASC
	</select>
	
	<select id="dateOoneday" resultType="OrdersVO">
	
		SELECT * FROM ORDERS o
		INNER JOIN
		USERS u
		ON (o.U_ID = u.U_ID)
		WHERE SI_CODE = #{si_code} 
		AND O_PAY_STATUS = TRUE AND O_ORDER_STATE = '전달완료'
		AND to_char(o.o_order_date, 'yyyy-MM-dd') = #{inputDate}
		ORDER BY O_SEQ DESC
		
	</select>
	
	<select id="dateOonedayDt" resultType="BasketVO">
		SELECT b.b_seq,
		b.o_code,
		b.u_id,
		b.si_code,
		b.m_seq,
		b.b_quantity,
		b.b_single_price,
		b.b_total_price,
		b.opb_code,
		b.op_code1,
		b.op_code2,
		b.op_code3,
		b.op_code4,
		b.op_code5,
		m.m_name,
		m.m_img_file,
		ob.opb_price,
		ob.opb_name,
		op.op_name as op_name1,
		op.op_price as op_price1,
		opp.op_name as op_name2,
		opp.op_price as op_price2,
		oppp.op_name as op_name3,
		oppp.op_price as op_price3,
		opppp.op_name as op_name4,
		opppp.op_price as op_price4,
		oppppp.op_name as op_name5,
		oppppp.op_price as op_price5,
		ord.o_order_date
		FROM BASKET_ORDER b
		INNER JOIN
		MENU m
		ON (b.M_SEQ = m.M_SEQ)
		INNER JOIN
		option_basic ob 
		ON (ob.opb_code = b.opb_code and ob.SI_CODE = b.SI_CODE)
		JOIN
		options op 
		ON (op.op_code = b.op_code1 and op.SI_CODE = b.SI_CODE)
		JOIN
		options opp 
		ON (opp.op_code = b.op_code2 and opp.SI_CODE = b.SI_CODE)
		JOIN
		options oppp 
		ON (oppp.op_code = b.op_code3 and oppp.SI_CODE = b.SI_CODE)
		JOIN
		options opppp 
		ON (opppp.op_code = b.op_code4 and opppp.SI_CODE = b.SI_CODE)
		JOIN
		options oppppp
		ON (oppppp.op_code = b.op_code5 and oppppp.SI_CODE = b.SI_CODE)
		join
		orders ord
		on (b.si_code = ord.si_code)
		WHERE b.SI_CODE = #{si_code} AND to_char(ord.o_order_date, 'yyyy-MM-dd') = #{inputDate}
		ORDER BY B_SEQ ASC
	
	</select>
	
	<select id="dateOPeriod" resultType="OrdersVO">
		
		SELECT * FROM ORDERS o
		INNER JOIN
		USERS u
		ON (o.U_ID = u.U_ID)
		WHERE SI_CODE = #{si_code} 
		AND O_PAY_STATUS = TRUE AND O_ORDER_STATE = '전달완료'
		AND o.o_order_date between to_timestamp(#{inputStrDate},'yyyy-MM-dd') and to_timestamp(#{inputEndDate},'yyyy-MM-dd')
		ORDER BY O_SEQ DESC
	
	</select>
	
	<select id="dateOPeriodDt" resultType="BasketVO">
	SELECT b.b_seq,
		b.o_code,
		b.u_id,
		b.si_code,
		b.m_seq,
		b.b_quantity,
		b.b_single_price,
		b.b_total_price,
		b.opb_code,
		b.op_code1,
		b.op_code2,
		b.op_code3,
		b.op_code4,
		b.op_code5,
		m.m_name,
		m.m_img_file,
		ob.opb_price,
		ob.opb_name,
		op.op_name as op_name1,
		op.op_price as op_price1,
		opp.op_name as op_name2,
		opp.op_price as op_price2,
		oppp.op_name as op_name3,
		oppp.op_price as op_price3,
		opppp.op_name as op_name4,
		opppp.op_price as op_price4,
		oppppp.op_name as op_name5,
		oppppp.op_price as op_price5,
		ord.o_order_date
		FROM BASKET_ORDER b
		INNER JOIN
		MENU m
		ON (b.M_SEQ = m.M_SEQ)
		INNER JOIN
		option_basic ob 
		ON (ob.opb_code = b.opb_code and ob.SI_CODE = b.SI_CODE)
		JOIN
		options op 
		ON (op.op_code = b.op_code1 and op.SI_CODE = b.SI_CODE)
		JOIN
		options opp 
		ON (opp.op_code = b.op_code2 and opp.SI_CODE = b.SI_CODE)
		JOIN
		options oppp 
		ON (oppp.op_code = b.op_code3 and oppp.SI_CODE = b.SI_CODE)
		JOIN
		options opppp 
		ON (opppp.op_code = b.op_code4 and opppp.SI_CODE = b.SI_CODE)
		JOIN
		options oppppp
		ON (oppppp.op_code = b.op_code5 and oppppp.SI_CODE = b.SI_CODE)
		join
		orders ord
		on (b.si_code = ord.si_code)
		AND ord.o_order_date between to_timestamp(#{inputStrDate},'yyyy-MM-dd') and to_timestamp(#{inputEndDate},'yyyy-MM-dd')
		ORDER BY B_SEQ ASC
	
	</select>
	
	<select id="dailyOutput">
	SELECT DATE(O_ORDER_DATE) AS O__DATE, COUNT(O_CODE) AS O_SEQ, SUM(O_TOTAL_PRICE) AS O_TOTAL_PRICE FROM ORDERS 
	WHERE O_ORDER_DATE <![CDATA[>]]> #{inputStrDate} AND O_ORDER_DATE <![CDATA[<=]]> #{inputEndDate}
	AND SI_CODE = #{si_code}
	GROUP BY DATE(O_ORDER_DATE) ORDER BY DATE(O_ORDER_DATE) DESC;
	</select>

	
</mapper>
